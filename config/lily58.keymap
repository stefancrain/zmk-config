/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

#include "common/headers.h"

/ {
    behaviors {
        #include "common/behaviors.dtsi"
    };
    conditional_layers {
        #include "common/conditional_layers.dtsi"
    };
    macros {
        #include "common/macros.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";

        mac_layer {
            bindings = <
                 &kp ESC  &kp N1     &kp N2    &kp N3    &kp N4  &kp N5                      &kp N6            &kp N7        &kp N8      &kp N9    &kp N0   &kp BSPC
                 &kp TAB   &kp Q      &kp W     &kp E     &kp R   &kp T                       &kp Y             &kp U         &kp I       &kp O     &kp P   &kp BSLH
               &kp LCTRL   &kp A      &kp S     &kp D     &kp F   &kp G                       &kp H             &kp J         &kp K       &kp L  &kp SEMI    &kp SQT
 &mt LEFT_SHIFT CAPSLOCK   &kp Z      &kp X     &kp C     &kp V   &kp B   &trans     &trans   &kp N             &kp M     &kp COMMA  &kp PERIOD  &kp FSLH  &kp RSHFT
                                     &kp LALT  &kp LGUI   &mo 1  &kp RET  &kp SPACE   &mo 2  &kp LEFT_COMMAND  &kp LEFT_ALT    
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {

            bindings = <
 &kp TILDE  &kp EXCLAMATION       &kp AT         &kp LESS_THAN       &kp GREATER_THAN       &kp PIPE                   &en_dash         &kp MINUS  &em_dash  &kp UNDERSCORE  &degree  &trans
 &kp POUND       &kp DOLLAR  &kp PERCENT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp SLASH                     &trans            &trans    &trans       &kp EQUAL   &trans  &trans
 &kp CARET         &kp AMPS    &kp ASTRK        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp BACKSLASH                     &trans            &trans    &trans          &trans   &trans  &trans
    &trans            &none        &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET         &trans  &trans  &trans  &kp GRAVE  &trans    &trans          &trans   &trans  &trans
                                  &reset                               &trans         &trans  &trans  &trans     &trans            &trans         &reset
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {

            bindings = <
  &none   &trans  &trans       &angles       &angles_quoted    &pipepipe                  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
 &trans   &trans  &trans  &parenthesis  &parenthesis_quoted  &slashslash                       &kp PG_UP             &none      &kp UP      &trans        &trans           &trans
 &trans  &andand  &trans       &braces       &braces_quoted       &trans                       &kp PG_DN          &kp LEFT    &kp DOWN   &kp RIGHT        &trans           &trans
 &trans   &trans  &trans     &brackets     &brackets_quoted       &trans  &trans  &trans        &kp HOME            &trans      &trans      &trans       &kp END           &reset
                             &reset                &trans       &trans  &trans  &trans          &trans            &trans      &reset
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Adjust_layer {
            bindings = <
     &reset  &out OUT_TOG  &out OUT_BLE  &out OUT_USB         &none         &none                                  &rgb_ug RGB_TOG                  &rgb_ug RGB_HUI                &rgb_ug RGB_SAI                  &rgb_ug RGB_BRI                   &rgb_ug RGB_EFF                           &reset
      &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                            &none                  &rgb_ug RGB_HUD                &rgb_ug RGB_SAD                  &rgb_ug RGB_BRD                   &rgb_ug RGB_EFR                            &none
 &bt BT_CLR         &none    &bt BT_PRV    &bt BT_NXT         &none         &none                  &rgb_ug RGB_COLOR_HSB(180,0,20)  &rgb_ug RGB_COLOR_HSB(117,0,40)  &rgb_ug RGB_COLOR_HSB(0,0,60)  &rgb_ug RGB_COLOR_HSB(300,0,88)  &rgb_ug RGB_COLOR_HSB(260,61,63)  &rgb_ug RGB_COLOR_HSB(58,53,81)
      &none         &none         &none         &none         &none         &none  &trans  &trans                           &trans                            &none                          &none                            &none                             &none                            &none
                                                &none         &none        &tog 0  &tog 4  &tog 0                           &tog 0                            &none                          &none                            
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        linux_layer {
            bindings = <
                 &kp ESC  &kp N1     &kp N2    &kp N3    &kp N4  &kp N5                      &kp N6            &kp N7        &kp N8      &kp N9    &kp N0   &kp BSPC
                 &kp TAB   &kp Q      &kp W     &kp E     &kp R   &kp T                       &kp Y             &kp U         &kp I       &kp O     &kp P   &kp BSLH
               &kp LGUI   &kp A      &kp S     &kp D     &kp F   &kp G                       &kp H             &kp J         &kp K       &kp L  &kp SEMI    &kp SQT
 &mt LEFT_SHIFT CAPSLOCK   &kp Z      &kp X     &kp C     &kp V   &kp B   &trans     &trans   &kp N             &kp M     &kp COMMA  &kp PERIOD  &kp FSLH  &kp RSHFT
                                      &kp LALT  &kp LCTRL   &mo 1  &kp RET  &kp SPACE   &mo 2  &kp LCTRL  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
